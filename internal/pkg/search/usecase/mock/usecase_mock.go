// Code generated by MockGen. DO NOT EDIT.
// Source: 2021_2_MAMBa/internal/pkg/domain (interfaces: SearchUsecase)

// Package mock is a generated GoMock package.
package mock

import (
	domain "2021_2_MAMBa/internal/pkg/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSearchUsecase is a mock of SearchUsecase interface.
type MockSearchUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockSearchUsecaseMockRecorder
}

// MockSearchUsecaseMockRecorder is the mock recorder for MockSearchUsecase.
type MockSearchUsecaseMockRecorder struct {
	mock *MockSearchUsecase
}

// NewMockSearchUsecase creates a new mock instance.
func NewMockSearchUsecase(ctrl *gomock.Controller) *MockSearchUsecase {
	mock := &MockSearchUsecase{ctrl: ctrl}
	mock.recorder = &MockSearchUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSearchUsecase) EXPECT() *MockSearchUsecaseMockRecorder {
	return m.recorder
}

// GetSearch mocks base method.
func (m *MockSearchUsecase) GetSearch(arg0 string, arg1, arg2, arg3, arg4 int) (domain.SearchResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSearch", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(domain.SearchResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSearch indicates an expected call of GetSearch.
func (mr *MockSearchUsecaseMockRecorder) GetSearch(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSearch", reflect.TypeOf((*MockSearchUsecase)(nil).GetSearch), arg0, arg1, arg2, arg3, arg4)
}
