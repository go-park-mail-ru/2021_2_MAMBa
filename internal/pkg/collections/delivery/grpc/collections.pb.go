// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: collections.proto

// protoc --go_out=plugins=grpc:. *.proto

package grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SkipLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skip  int64 `protobuf:"varint,1,opt,name=skip,proto3" json:"skip,omitempty"`
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *SkipLimit) Reset() {
	*x = SkipLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collections_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkipLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkipLimit) ProtoMessage() {}

func (x *SkipLimit) ProtoReflect() protoreflect.Message {
	mi := &file_collections_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkipLimit.ProtoReflect.Descriptor instead.
func (*SkipLimit) Descriptor() ([]byte, []int) {
	return file_collections_proto_rawDescGZIP(), []int{0}
}

func (x *SkipLimit) GetSkip() int64 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *SkipLimit) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type CollectionPreview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=Id,proto3"         json:"id"`
	Title      string `protobuf:"bytes,2,opt,name=Title,proto3"       json:"title"`
	PictureUrl string `protobuf:"bytes,3,opt,name=PictureUrl,proto3"  json:"picture_url"`
}

func (x *CollectionPreview) Reset() {
	*x = CollectionPreview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collections_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionPreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionPreview) ProtoMessage() {}

func (x *CollectionPreview) ProtoReflect() protoreflect.Message {
	mi := &file_collections_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionPreview.ProtoReflect.Descriptor instead.
func (*CollectionPreview) Descriptor() ([]byte, []int) {
	return file_collections_proto_rawDescGZIP(), []int{1}
}

func (x *CollectionPreview) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CollectionPreview) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CollectionPreview) GetPictureUrl() string {
	if x != nil {
		return x.PictureUrl
	}
	return ""
}

type Collections struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollArray       []*CollectionPreview `protobuf:"bytes,1,rep,name=CollArray,proto3"        json:"collections_list"`
	MoreAvailable   bool                 `protobuf:"varint,2,opt,name=MoreAvailable,proto3"   json:"more_available"`
	CollectionTotal int64                `protobuf:"varint,3,opt,name=CollectionTotal,proto3" json:"collection_total"`
	CurrentSort     string               `protobuf:"bytes,4,opt,name=CurrentSort,proto3"      json:"current_sort"`
	CurrentLimit    int64                `protobuf:"varint,5,opt,name=CurrentLimit,proto3"    json:"current_limit"`
	CurrentSkip     int64                `protobuf:"varint,6,opt,name=CurrentSkip,proto3"     json:"current_skip"`
}

func (x *Collections) Reset() {
	*x = Collections{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collections_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collections) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collections) ProtoMessage() {}

func (x *Collections) ProtoReflect() protoreflect.Message {
	mi := &file_collections_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collections.ProtoReflect.Descriptor instead.
func (*Collections) Descriptor() ([]byte, []int) {
	return file_collections_proto_rawDescGZIP(), []int{2}
}

func (x *Collections) GetCollArray() []*CollectionPreview {
	if x != nil {
		return x.CollArray
	}
	return nil
}

func (x *Collections) GetMoreAvailable() bool {
	if x != nil {
		return x.MoreAvailable
	}
	return false
}

func (x *Collections) GetCollectionTotal() int64 {
	if x != nil {
		return x.CollectionTotal
	}
	return 0
}

func (x *Collections) GetCurrentSort() string {
	if x != nil {
		return x.CurrentSort
	}
	return ""
}

func (x *Collections) GetCurrentLimit() int64 {
	if x != nil {
		return x.CurrentLimit
	}
	return 0
}

func (x *Collections) GetCurrentSkip() int64 {
	if x != nil {
		return x.CurrentSkip
	}
	return 0
}

type Genre struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Genre) Reset() {
	*x = Genre{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collections_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Genre) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Genre) ProtoMessage() {}

func (x *Genre) ProtoReflect() protoreflect.Message {
	mi := &file_collections_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Genre.ProtoReflect.Descriptor instead.
func (*Genre) Descriptor() ([]byte, []int) {
	return file_collections_proto_rawDescGZIP(), []int{3}
}

func (x *Genre) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Genre) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Person struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64   `protobuf:"varint,1,opt,name=id,proto3"               json:"id,omitempty"`
	NameEn       string   `protobuf:"bytes,2,opt,name=nameEn,proto3"            json:"name_en,omitempty"`
	NameRus      string   `protobuf:"bytes,3,opt,name=nameRus,proto3"           json:"name_rus,omitempty"`
	PictureUrl   string   `protobuf:"bytes,4,opt,name=pictureUrl,proto3"        json:"picture_url,omitempty"`
	Career       []string `protobuf:"bytes,5,rep,name=career,proto3"            json:"career,omitempty"`
	Height       float64  `protobuf:"fixed64,6,opt,name=height,proto3"          json:"height,omitempty"`
	Age          int64    `protobuf:"varint,7,opt,name=age,proto3"              json:"age,omitempty"`
	Birthday     string   `protobuf:"bytes,8,opt,name=birthday,proto3"          json:"birthday,omitempty"`
	Death        string   `protobuf:"bytes,9,opt,name=death,proto3"             json:"death,omitempty"`
	BirthPlace   string   `protobuf:"bytes,10,opt,name=birthPlace,proto3"       json:"birth_place,omitempty"`
	DeathPlace   string   `protobuf:"bytes,11,opt,name=deathPlace,proto3"       json:"death_place,omitempty"`
	Gender       string   `protobuf:"bytes,12,opt,name=gender,proto3"           json:"gender,omitempty"`
	FamilyStatus string   `protobuf:"bytes,13,opt,name=familyStatus,proto3"     json:"family_status,omitempty"`
	FilmNumber   int64    `protobuf:"varint,14,opt,name=filmNumber,proto3"      json:"film_number,omitempty"`
}

func (x *Person) Reset() {
	*x = Person{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collections_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_collections_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_collections_proto_rawDescGZIP(), []int{4}
}

func (x *Person) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Person) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

func (x *Person) GetNameRus() string {
	if x != nil {
		return x.NameRus
	}
	return ""
}

func (x *Person) GetPictureUrl() string {
	if x != nil {
		return x.PictureUrl
	}
	return ""
}

func (x *Person) GetCareer() []string {
	if x != nil {
		return x.Career
	}
	return nil
}

func (x *Person) GetHeight() float64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Person) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Person) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *Person) GetDeath() string {
	if x != nil {
		return x.Death
	}
	return ""
}

func (x *Person) GetBirthPlace() string {
	if x != nil {
		return x.BirthPlace
	}
	return ""
}

func (x *Person) GetDeathPlace() string {
	if x != nil {
		return x.DeathPlace
	}
	return ""
}

func (x *Person) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Person) GetFamilyStatus() string {
	if x != nil {
		return x.FamilyStatus
	}
	return ""
}

func (x *Person) GetFilmNumber() int64 {
	if x != nil {
		return x.FilmNumber
	}
	return 0
}

type Film struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64    `protobuf:"varint,1,opt,name=id,proto3"              json:"id,omitempty"`
	Title           string    `protobuf:"bytes,2,opt,name=title,proto3"            json:"title,omitempty"`
	TitleOriginal   string    `protobuf:"bytes,3,opt,name=titleOriginal,proto3"    json:"title_original,omitempty"`
	Rating          float64   `protobuf:"fixed64,4,opt,name=rating,proto3"         json:"rating,omitempty"`
	Description     string    `protobuf:"bytes,5,opt,name=description,proto3"      json:"description,omitempty"`
	TotalRevenue    string    `protobuf:"bytes,6,opt,name=totalRevenue,proto3"     json:"total_revenue,omitempty"`
	PosterUrl       string    `protobuf:"bytes,7,opt,name=posterUrl,proto3"        json:"poster_url,omitempty"`
	TrailerUrl      string    `protobuf:"bytes,8,opt,name=trailerUrl,proto3"       json:"trailer_url,omitempty"`
	ContentType     string    `protobuf:"bytes,9,opt,name=contentType,proto3"      json:"content_type,omitempty"`
	ReleaseYear     int64     `protobuf:"varint,10,opt,name=releaseYear,proto3"    json:"release_year,omitempty"`
	Duration        int64     `protobuf:"varint,11,opt,name=duration,proto3"       json:"duration,omitempty"`
	OriginCountries []string  `protobuf:"bytes,12,rep,name=originCountries,proto3" json:"origin_countries,omitempty"`
	Cast            []*Person `protobuf:"bytes,13,rep,name=cast,proto3"            json:"cast,omitempty"`
	Director        *Person   `protobuf:"bytes,14,opt,name=director,proto3"        json:"director,omitempty"`
	Screenwriter    *Person   `protobuf:"bytes,15,opt,name=screenwriter,proto3"    json:"screenwriter,omitempty"`
	Genres          []*Genre  `protobuf:"bytes,16,rep,name=genres,proto3"          json:"genres,omitempty"`
}

func (x *Film) Reset() {
	*x = Film{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collections_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Film) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Film) ProtoMessage() {}

func (x *Film) ProtoReflect() protoreflect.Message {
	mi := &file_collections_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Film.ProtoReflect.Descriptor instead.
func (*Film) Descriptor() ([]byte, []int) {
	return file_collections_proto_rawDescGZIP(), []int{5}
}

func (x *Film) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Film) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Film) GetTitleOriginal() string {
	if x != nil {
		return x.TitleOriginal
	}
	return ""
}

func (x *Film) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Film) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Film) GetTotalRevenue() string {
	if x != nil {
		return x.TotalRevenue
	}
	return ""
}

func (x *Film) GetPosterUrl() string {
	if x != nil {
		return x.PosterUrl
	}
	return ""
}

func (x *Film) GetTrailerUrl() string {
	if x != nil {
		return x.TrailerUrl
	}
	return ""
}

func (x *Film) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *Film) GetReleaseYear() int64 {
	if x != nil {
		return x.ReleaseYear
	}
	return 0
}

func (x *Film) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Film) GetOriginCountries() []string {
	if x != nil {
		return x.OriginCountries
	}
	return nil
}

func (x *Film) GetCast() []*Person {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *Film) GetDirector() *Person {
	if x != nil {
		return x.Director
	}
	return nil
}

func (x *Film) GetScreenwriter() *Person {
	if x != nil {
		return x.Screenwriter
	}
	return nil
}

func (x *Film) GetGenres() []*Genre {
	if x != nil {
		return x.Genres
	}
	return nil
}

type Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64 `protobuf:"varint,1,opt,name=id,proto3"          json:"id"`
	AuthId       uint64 `protobuf:"varint,2,opt,name=authId,proto3"      json:"auth_id"`
	CollName     string `protobuf:"bytes,3,opt,name=collName,proto3"     json:"collection_name"`
	Description  string `protobuf:"bytes,4,opt,name=description,proto3"  json:"description"`
	CreationTime string `protobuf:"bytes,5,opt,name=creationTime,proto3" json:"creation_time"`
	PicUrl       string `protobuf:"bytes,6,opt,name=picUrl,proto3"       json:"picture_url"`
}

func (x *Collection) Reset() {
	*x = Collection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collections_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection) ProtoMessage() {}

func (x *Collection) ProtoReflect() protoreflect.Message {
	mi := &file_collections_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection.ProtoReflect.Descriptor instead.
func (*Collection) Descriptor() ([]byte, []int) {
	return file_collections_proto_rawDescGZIP(), []int{6}
}

func (x *Collection) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Collection) GetAuthId() uint64 {
	if x != nil {
		return x.AuthId
	}
	return 0
}

func (x *Collection) GetCollName() string {
	if x != nil {
		return x.CollName
	}
	return ""
}

func (x *Collection) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Collection) GetCreationTime() string {
	if x != nil {
		return x.CreationTime
	}
	return ""
}

func (x *Collection) GetPicUrl() string {
	if x != nil {
		return x.PicUrl
	}
	return ""
}

type CollectionPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Films []*Film     `protobuf:"bytes,1,rep,name=films,proto3" json:"films"`
	Coll  *Collection `protobuf:"bytes,2,opt,name=coll,proto3" json:"collection"`
}

func (x *CollectionPage) Reset() {
	*x = CollectionPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collections_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionPage) ProtoMessage() {}

func (x *CollectionPage) ProtoReflect() protoreflect.Message {
	mi := &file_collections_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionPage.ProtoReflect.Descriptor instead.
func (*CollectionPage) Descriptor() ([]byte, []int) {
	return file_collections_proto_rawDescGZIP(), []int{7}
}

func (x *CollectionPage) GetFilms() []*Film {
	if x != nil {
		return x.Films
	}
	return nil
}

func (x *CollectionPage) GetColl() *Collection {
	if x != nil {
		return x.Coll
	}
	return nil
}

type ID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ID) Reset() {
	*x = ID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collections_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ID) ProtoMessage() {}

func (x *ID) ProtoReflect() protoreflect.Message {
	mi := &file_collections_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ID.ProtoReflect.Descriptor instead.
func (*ID) Descriptor() ([]byte, []int) {
	return file_collections_proto_rawDescGZIP(), []int{8}
}

func (x *ID) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_collections_proto protoreflect.FileDescriptor

var file_collections_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x47, 0x52, 0x50, 0x43, 0x63, 0x6f, 0x6c, 0x6c, 0x22, 0x35, 0x0a,
	0x09, 0x53, 0x6b, 0x69, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b,
	0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x59, 0x0a, 0x11, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x22,
	0x80, 0x02, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x39, 0x0a, 0x09, 0x43, 0x6f, 0x6c, 0x6c, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x47, 0x52, 0x50, 0x43, 0x63, 0x6f, 0x6c, 0x6c, 0x2e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x09, 0x43, 0x6f, 0x6c, 0x6c, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x6f,
	0x72, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x4d, 0x6f, 0x72, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x6b, 0x69, 0x70, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x6b,
	0x69, 0x70, 0x22, 0x2b, 0x0a, 0x05, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0xfa, 0x02, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61,
	0x6d, 0x65, 0x45, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65,
	0x45, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61,
	0x72, 0x65, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65,
	0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x61, 0x74, 0x68,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x61, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x61, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x61, 0x6d, 0x69,
	0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x66, 0x69, 0x6c, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x66, 0x69, 0x6c, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xab, 0x04, 0x0a,
	0x04, 0x46, 0x69, 0x6c, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x59, 0x65, 0x61, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x59, 0x65, 0x61,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a,
	0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x61, 0x73, 0x74, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x47, 0x52, 0x50, 0x43, 0x63, 0x6f, 0x6c, 0x6c,
	0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x04, 0x63, 0x61, 0x73, 0x74, 0x12, 0x2c, 0x0a,
	0x08, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x47, 0x52, 0x50, 0x43, 0x63, 0x6f, 0x6c, 0x6c, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x52, 0x08, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x0c, 0x73,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x47, 0x52, 0x50, 0x43, 0x63, 0x6f, 0x6c, 0x6c, 0x2e, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x12, 0x27, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x47, 0x52, 0x50, 0x43, 0x63, 0x6f, 0x6c, 0x6c, 0x2e, 0x47, 0x65, 0x6e,
	0x72, 0x65, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x0a, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x63, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x69, 0x63, 0x55, 0x72, 0x6c, 0x22, 0x60, 0x0a, 0x0e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a,
	0x05, 0x66, 0x69, 0x6c, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x47,
	0x52, 0x50, 0x43, 0x63, 0x6f, 0x6c, 0x6c, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x05, 0x66, 0x69,
	0x6c, 0x6d, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x63, 0x6f, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x47, 0x52, 0x50, 0x43, 0x63, 0x6f, 0x6c, 0x6c, 0x2e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x6c, 0x22, 0x14, 0x0a,
	0x02, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x32, 0x8b, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x50, 0x43, 0x12, 0x3c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x13, 0x2e, 0x47, 0x52, 0x50, 0x43, 0x63,
	0x6f, 0x6c, 0x6c, 0x2e, 0x53, 0x6b, 0x69, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x1a, 0x15, 0x2e,
	0x47, 0x52, 0x50, 0x43, 0x63, 0x6f, 0x6c, 0x6c, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x12, 0x0c, 0x2e, 0x47, 0x52, 0x50, 0x43,
	0x63, 0x6f, 0x6c, 0x6c, 0x2e, 0x49, 0x44, 0x1a, 0x18, 0x2e, 0x47, 0x52, 0x50, 0x43, 0x63, 0x6f,
	0x6c, 0x6c, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67,
	0x65, 0x42, 0x27, 0x5a, 0x25, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_collections_proto_rawDescOnce sync.Once
	file_collections_proto_rawDescData = file_collections_proto_rawDesc
)

func file_collections_proto_rawDescGZIP() []byte {
	file_collections_proto_rawDescOnce.Do(func() {
		file_collections_proto_rawDescData = protoimpl.X.CompressGZIP(file_collections_proto_rawDescData)
	})
	return file_collections_proto_rawDescData
}

var file_collections_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_collections_proto_goTypes = []interface{}{
	(*SkipLimit)(nil),         // 0: GRPCcoll.SkipLimit
	(*CollectionPreview)(nil), // 1: GRPCcoll.CollectionPreview
	(*Collections)(nil),       // 2: GRPCcoll.Collections
	(*Genre)(nil),             // 3: GRPCcoll.Genre
	(*Person)(nil),            // 4: GRPCcoll.Person
	(*Film)(nil),              // 5: GRPCcoll.Film
	(*Collection)(nil),        // 6: GRPCcoll.Collection
	(*CollectionPage)(nil),    // 7: GRPCcoll.CollectionPage
	(*ID)(nil),                // 8: GRPCcoll.ID
}
var file_collections_proto_depIdxs = []int32{
	1, // 0: GRPCcoll.Collections.CollArray:type_name -> GRPCcoll.CollectionPreview
	4, // 1: GRPCcoll.Film.cast:type_name -> GRPCcoll.Person
	4, // 2: GRPCcoll.Film.director:type_name -> GRPCcoll.Person
	4, // 3: GRPCcoll.Film.screenwriter:type_name -> GRPCcoll.Person
	3, // 4: GRPCcoll.Film.genres:type_name -> GRPCcoll.Genre
	5, // 5: GRPCcoll.CollectionPage.films:type_name -> GRPCcoll.Film
	6, // 6: GRPCcoll.CollectionPage.coll:type_name -> GRPCcoll.Collection
	0, // 7: GRPCcoll.CollectionsRPC.GetCollections:input_type -> GRPCcoll.SkipLimit
	8, // 8: GRPCcoll.CollectionsRPC.GetCollectionPage:input_type -> GRPCcoll.ID
	2, // 9: GRPCcoll.CollectionsRPC.GetCollections:output_type -> GRPCcoll.Collections
	7, // 10: GRPCcoll.CollectionsRPC.GetCollectionPage:output_type -> GRPCcoll.CollectionPage
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_collections_proto_init() }
func file_collections_proto_init() {
	if File_collections_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_collections_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkipLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collections_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionPreview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collections_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collections); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collections_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Genre); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collections_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Person); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collections_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Film); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collections_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collections_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collections_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_collections_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_collections_proto_goTypes,
		DependencyIndexes: file_collections_proto_depIdxs,
		MessageInfos:      file_collections_proto_msgTypes,
	}.Build()
	File_collections_proto = out.File
	file_collections_proto_rawDesc = nil
	file_collections_proto_goTypes = nil
	file_collections_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CollectionsRPCClient is the client API for CollectionsRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CollectionsRPCClient interface {
	GetCollections(ctx context.Context, in *SkipLimit, opts ...grpc.CallOption) (*Collections, error)
	GetCollectionPage(ctx context.Context, in *ID, opts ...grpc.CallOption) (*CollectionPage, error)
}

type collectionsRPCClient struct {
	cc grpc.ClientConnInterface
}

func NewCollectionsRPCClient(cc grpc.ClientConnInterface) CollectionsRPCClient {
	return &collectionsRPCClient{cc}
}

func (c *collectionsRPCClient) GetCollections(ctx context.Context, in *SkipLimit, opts ...grpc.CallOption) (*Collections, error) {
	out := new(Collections)
	err := c.cc.Invoke(ctx, "/GRPCcoll.CollectionsRPC/GetCollections", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectionsRPCClient) GetCollectionPage(ctx context.Context, in *ID, opts ...grpc.CallOption) (*CollectionPage, error) {
	out := new(CollectionPage)
	err := c.cc.Invoke(ctx, "/GRPCcoll.CollectionsRPC/GetCollectionPage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CollectionsRPCServer is the server API for CollectionsRPC service.
type CollectionsRPCServer interface {
	GetCollections(context.Context, *SkipLimit) (*Collections, error)
	GetCollectionPage(context.Context, *ID) (*CollectionPage, error)
}

// UnimplementedCollectionsRPCServer can be embedded to have forward compatible implementations.
type UnimplementedCollectionsRPCServer struct {
}

func (*UnimplementedCollectionsRPCServer) GetCollections(context.Context, *SkipLimit) (*Collections, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollections not implemented")
}
func (*UnimplementedCollectionsRPCServer) GetCollectionPage(context.Context, *ID) (*CollectionPage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollectionPage not implemented")
}

func RegisterCollectionsRPCServer(s *grpc.Server, srv CollectionsRPCServer) {
	s.RegisterService(&_CollectionsRPC_serviceDesc, srv)
}

func _CollectionsRPC_GetCollections_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SkipLimit)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectionsRPCServer).GetCollections(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GRPCcoll.CollectionsRPC/GetCollections",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectionsRPCServer).GetCollections(ctx, req.(*SkipLimit))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollectionsRPC_GetCollectionPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectionsRPCServer).GetCollectionPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GRPCcoll.CollectionsRPC/GetCollectionPage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectionsRPCServer).GetCollectionPage(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _CollectionsRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GRPCcoll.CollectionsRPC",
	HandlerType: (*CollectionsRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCollections",
			Handler:    _CollectionsRPC_GetCollections_Handler,
		},
		{
			MethodName: "GetCollectionPage",
			Handler:    _CollectionsRPC_GetCollectionPage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "collections.proto",
}
