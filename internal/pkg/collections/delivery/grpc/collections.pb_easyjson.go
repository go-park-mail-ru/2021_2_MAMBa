// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package grpc

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc(in *jlexer.Lexer, out *collectionsRPCClient) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc(out *jwriter.Writer, in collectionsRPCClient) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v collectionsRPCClient) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v collectionsRPCClient) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *collectionsRPCClient) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *collectionsRPCClient) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc(l, v)
}
func easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc1(in *jlexer.Lexer, out *UnimplementedCollectionsRPCServer) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc1(out *jwriter.Writer, in UnimplementedCollectionsRPCServer) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UnimplementedCollectionsRPCServer) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UnimplementedCollectionsRPCServer) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UnimplementedCollectionsRPCServer) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UnimplementedCollectionsRPCServer) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc1(l, v)
}
func easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc2(in *jlexer.Lexer, out *SkipLimit) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "skip":
			out.Skip = int64(in.Int64())
		case "limit":
			out.Limit = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc2(out *jwriter.Writer, in SkipLimit) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Skip != 0 {
		const prefix string = ",\"skip\":"
		first = false
		out.RawString(prefix[1:])
		out.Int64(int64(in.Skip))
	}
	if in.Limit != 0 {
		const prefix string = ",\"limit\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.Limit))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SkipLimit) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SkipLimit) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SkipLimit) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SkipLimit) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc2(l, v)
}
func easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc3(in *jlexer.Lexer, out *Person) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = uint64(in.Uint64())
		case "name_en":
			out.NameEn = string(in.String())
		case "name_rus":
			out.NameRus = string(in.String())
		case "picture_url":
			out.PictureUrl = string(in.String())
		case "career":
			if in.IsNull() {
				in.Skip()
				out.Career = nil
			} else {
				in.Delim('[')
				if out.Career == nil {
					if !in.IsDelim(']') {
						out.Career = make([]string, 0, 4)
					} else {
						out.Career = []string{}
					}
				} else {
					out.Career = (out.Career)[:0]
				}
				for !in.IsDelim(']') {
					var v1 string
					v1 = string(in.String())
					out.Career = append(out.Career, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "height":
			out.Height = float64(in.Float64())
		case "age":
			out.Age = int64(in.Int64())
		case "birthday":
			out.Birthday = string(in.String())
		case "death":
			out.Death = string(in.String())
		case "birth_place":
			out.BirthPlace = string(in.String())
		case "death_place":
			out.DeathPlace = string(in.String())
		case "gender":
			out.Gender = string(in.String())
		case "family_status":
			out.FamilyStatus = string(in.String())
		case "film_number":
			out.FilmNumber = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc3(out *jwriter.Writer, in Person) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Id != 0 {
		const prefix string = ",\"id\":"
		first = false
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.Id))
	}
	if in.NameEn != "" {
		const prefix string = ",\"name_en\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.NameEn))
	}
	if in.NameRus != "" {
		const prefix string = ",\"name_rus\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.NameRus))
	}
	if in.PictureUrl != "" {
		const prefix string = ",\"picture_url\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.PictureUrl))
	}
	if len(in.Career) != 0 {
		const prefix string = ",\"career\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		{
			out.RawByte('[')
			for v2, v3 := range in.Career {
				if v2 > 0 {
					out.RawByte(',')
				}
				out.String(string(v3))
			}
			out.RawByte(']')
		}
	}
	if in.Height != 0 {
		const prefix string = ",\"height\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Float64(float64(in.Height))
	}
	if in.Age != 0 {
		const prefix string = ",\"age\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.Age))
	}
	if in.Birthday != "" {
		const prefix string = ",\"birthday\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.Birthday))
	}
	if in.Death != "" {
		const prefix string = ",\"death\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.Death))
	}
	if in.BirthPlace != "" {
		const prefix string = ",\"birth_place\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.BirthPlace))
	}
	if in.DeathPlace != "" {
		const prefix string = ",\"death_place\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.DeathPlace))
	}
	if in.Gender != "" {
		const prefix string = ",\"gender\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.Gender))
	}
	if in.FamilyStatus != "" {
		const prefix string = ",\"family_status\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.FamilyStatus))
	}
	if in.FilmNumber != 0 {
		const prefix string = ",\"film_number\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.FilmNumber))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Person) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Person) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Person) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Person) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc3(l, v)
}
func easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc4(in *jlexer.Lexer, out *ID) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = uint64(in.Uint64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc4(out *jwriter.Writer, in ID) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Id != 0 {
		const prefix string = ",\"id\":"
		first = false
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.Id))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ID) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ID) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ID) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ID) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc4(l, v)
}
func easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc5(in *jlexer.Lexer, out *Genre) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = uint64(in.Uint64())
		case "name":
			out.Name = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc5(out *jwriter.Writer, in Genre) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Id != 0 {
		const prefix string = ",\"id\":"
		first = false
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.Id))
	}
	if in.Name != "" {
		const prefix string = ",\"name\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.Name))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Genre) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Genre) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Genre) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Genre) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc5(l, v)
}
func easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc6(in *jlexer.Lexer, out *Film) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = uint64(in.Uint64())
		case "title":
			out.Title = string(in.String())
		case "title_original":
			out.TitleOriginal = string(in.String())
		case "rating":
			out.Rating = float64(in.Float64())
		case "description":
			out.Description = string(in.String())
		case "total_revenue":
			out.TotalRevenue = string(in.String())
		case "poster_url":
			out.PosterUrl = string(in.String())
		case "trailer_url":
			out.TrailerUrl = string(in.String())
		case "content_type":
			out.ContentType = string(in.String())
		case "release_year":
			out.ReleaseYear = int64(in.Int64())
		case "duration":
			out.Duration = int64(in.Int64())
		case "origin_countries":
			if in.IsNull() {
				in.Skip()
				out.OriginCountries = nil
			} else {
				in.Delim('[')
				if out.OriginCountries == nil {
					if !in.IsDelim(']') {
						out.OriginCountries = make([]string, 0, 4)
					} else {
						out.OriginCountries = []string{}
					}
				} else {
					out.OriginCountries = (out.OriginCountries)[:0]
				}
				for !in.IsDelim(']') {
					var v4 string
					v4 = string(in.String())
					out.OriginCountries = append(out.OriginCountries, v4)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "cast":
			if in.IsNull() {
				in.Skip()
				out.Cast = nil
			} else {
				in.Delim('[')
				if out.Cast == nil {
					if !in.IsDelim(']') {
						out.Cast = make([]*Person, 0, 8)
					} else {
						out.Cast = []*Person{}
					}
				} else {
					out.Cast = (out.Cast)[:0]
				}
				for !in.IsDelim(']') {
					var v5 *Person
					if in.IsNull() {
						in.Skip()
						v5 = nil
					} else {
						if v5 == nil {
							v5 = new(Person)
						}
						(*v5).UnmarshalEasyJSON(in)
					}
					out.Cast = append(out.Cast, v5)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "director":
			if in.IsNull() {
				in.Skip()
				out.Director = nil
			} else {
				if out.Director == nil {
					out.Director = new(Person)
				}
				(*out.Director).UnmarshalEasyJSON(in)
			}
		case "screenwriter":
			if in.IsNull() {
				in.Skip()
				out.Screenwriter = nil
			} else {
				if out.Screenwriter == nil {
					out.Screenwriter = new(Person)
				}
				(*out.Screenwriter).UnmarshalEasyJSON(in)
			}
		case "genres":
			if in.IsNull() {
				in.Skip()
				out.Genres = nil
			} else {
				in.Delim('[')
				if out.Genres == nil {
					if !in.IsDelim(']') {
						out.Genres = make([]*Genre, 0, 8)
					} else {
						out.Genres = []*Genre{}
					}
				} else {
					out.Genres = (out.Genres)[:0]
				}
				for !in.IsDelim(']') {
					var v6 *Genre
					if in.IsNull() {
						in.Skip()
						v6 = nil
					} else {
						if v6 == nil {
							v6 = new(Genre)
						}
						(*v6).UnmarshalEasyJSON(in)
					}
					out.Genres = append(out.Genres, v6)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc6(out *jwriter.Writer, in Film) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Id != 0 {
		const prefix string = ",\"id\":"
		first = false
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.Id))
	}
	if in.Title != "" {
		const prefix string = ",\"title\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.Title))
	}
	if in.TitleOriginal != "" {
		const prefix string = ",\"title_original\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.TitleOriginal))
	}
	if in.Rating != 0 {
		const prefix string = ",\"rating\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Float64(float64(in.Rating))
	}
	if in.Description != "" {
		const prefix string = ",\"description\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.Description))
	}
	if in.TotalRevenue != "" {
		const prefix string = ",\"total_revenue\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.TotalRevenue))
	}
	if in.PosterUrl != "" {
		const prefix string = ",\"poster_url\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.PosterUrl))
	}
	if in.TrailerUrl != "" {
		const prefix string = ",\"trailer_url\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.TrailerUrl))
	}
	if in.ContentType != "" {
		const prefix string = ",\"content_type\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.ContentType))
	}
	if in.ReleaseYear != 0 {
		const prefix string = ",\"release_year\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.ReleaseYear))
	}
	if in.Duration != 0 {
		const prefix string = ",\"duration\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int64(int64(in.Duration))
	}
	if len(in.OriginCountries) != 0 {
		const prefix string = ",\"origin_countries\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		{
			out.RawByte('[')
			for v7, v8 := range in.OriginCountries {
				if v7 > 0 {
					out.RawByte(',')
				}
				out.String(string(v8))
			}
			out.RawByte(']')
		}
	}
	if len(in.Cast) != 0 {
		const prefix string = ",\"cast\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		{
			out.RawByte('[')
			for v9, v10 := range in.Cast {
				if v9 > 0 {
					out.RawByte(',')
				}
				if v10 == nil {
					out.RawString("null")
				} else {
					(*v10).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	if in.Director != nil {
		const prefix string = ",\"director\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.Director).MarshalEasyJSON(out)
	}
	if in.Screenwriter != nil {
		const prefix string = ",\"screenwriter\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.Screenwriter).MarshalEasyJSON(out)
	}
	if len(in.Genres) != 0 {
		const prefix string = ",\"genres\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		{
			out.RawByte('[')
			for v11, v12 := range in.Genres {
				if v11 > 0 {
					out.RawByte(',')
				}
				if v12 == nil {
					out.RawString("null")
				} else {
					(*v12).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Film) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Film) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Film) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Film) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc6(l, v)
}
func easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc7(in *jlexer.Lexer, out *Collections) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "collections_list":
			if in.IsNull() {
				in.Skip()
				out.CollArray = nil
			} else {
				in.Delim('[')
				if out.CollArray == nil {
					if !in.IsDelim(']') {
						out.CollArray = make([]*CollectionPreview, 0, 8)
					} else {
						out.CollArray = []*CollectionPreview{}
					}
				} else {
					out.CollArray = (out.CollArray)[:0]
				}
				for !in.IsDelim(']') {
					var v13 *CollectionPreview
					if in.IsNull() {
						in.Skip()
						v13 = nil
					} else {
						if v13 == nil {
							v13 = new(CollectionPreview)
						}
						(*v13).UnmarshalEasyJSON(in)
					}
					out.CollArray = append(out.CollArray, v13)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "more_available":
			out.MoreAvailable = bool(in.Bool())
		case "collection_total":
			out.CollectionTotal = int64(in.Int64())
		case "current_sort":
			out.CurrentSort = string(in.String())
		case "current_limit":
			out.CurrentLimit = int64(in.Int64())
		case "current_skip":
			out.CurrentSkip = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc7(out *jwriter.Writer, in Collections) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"collections_list\":"
		out.RawString(prefix[1:])
		if in.CollArray == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v14, v15 := range in.CollArray {
				if v14 > 0 {
					out.RawByte(',')
				}
				if v15 == nil {
					out.RawString("null")
				} else {
					(*v15).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"more_available\":"
		out.RawString(prefix)
		out.Bool(bool(in.MoreAvailable))
	}
	{
		const prefix string = ",\"collection_total\":"
		out.RawString(prefix)
		out.Int64(int64(in.CollectionTotal))
	}
	{
		const prefix string = ",\"current_sort\":"
		out.RawString(prefix)
		out.String(string(in.CurrentSort))
	}
	{
		const prefix string = ",\"current_limit\":"
		out.RawString(prefix)
		out.Int64(int64(in.CurrentLimit))
	}
	{
		const prefix string = ",\"current_skip\":"
		out.RawString(prefix)
		out.Int64(int64(in.CurrentSkip))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Collections) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Collections) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Collections) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Collections) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc7(l, v)
}
func easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc8(in *jlexer.Lexer, out *CollectionPreview) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = uint64(in.Uint64())
		case "title":
			out.Title = string(in.String())
		case "picture_url":
			out.PictureUrl = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc8(out *jwriter.Writer, in CollectionPreview) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.Id))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"picture_url\":"
		out.RawString(prefix)
		out.String(string(in.PictureUrl))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CollectionPreview) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CollectionPreview) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CollectionPreview) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CollectionPreview) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc8(l, v)
}
func easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc9(in *jlexer.Lexer, out *CollectionPage) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "films":
			if in.IsNull() {
				in.Skip()
				out.Films = nil
			} else {
				in.Delim('[')
				if out.Films == nil {
					if !in.IsDelim(']') {
						out.Films = make([]*Film, 0, 8)
					} else {
						out.Films = []*Film{}
					}
				} else {
					out.Films = (out.Films)[:0]
				}
				for !in.IsDelim(']') {
					var v16 *Film
					if in.IsNull() {
						in.Skip()
						v16 = nil
					} else {
						if v16 == nil {
							v16 = new(Film)
						}
						(*v16).UnmarshalEasyJSON(in)
					}
					out.Films = append(out.Films, v16)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "collection":
			if in.IsNull() {
				in.Skip()
				out.Coll = nil
			} else {
				if out.Coll == nil {
					out.Coll = new(Collection)
				}
				(*out.Coll).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc9(out *jwriter.Writer, in CollectionPage) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"films\":"
		out.RawString(prefix[1:])
		if in.Films == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v17, v18 := range in.Films {
				if v17 > 0 {
					out.RawByte(',')
				}
				if v18 == nil {
					out.RawString("null")
				} else {
					(*v18).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"collection\":"
		out.RawString(prefix)
		if in.Coll == nil {
			out.RawString("null")
		} else {
			(*in.Coll).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CollectionPage) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CollectionPage) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CollectionPage) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CollectionPage) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc9(l, v)
}
func easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc10(in *jlexer.Lexer, out *Collection) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = uint64(in.Uint64())
		case "auth_id":
			out.AuthId = uint64(in.Uint64())
		case "collection_name":
			out.CollName = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "creation_time":
			out.CreationTime = string(in.String())
		case "picture_url":
			out.PicUrl = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc10(out *jwriter.Writer, in Collection) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.Id))
	}
	{
		const prefix string = ",\"auth_id\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.AuthId))
	}
	{
		const prefix string = ",\"collection_name\":"
		out.RawString(prefix)
		out.String(string(in.CollName))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"creation_time\":"
		out.RawString(prefix)
		out.String(string(in.CreationTime))
	}
	{
		const prefix string = ",\"picture_url\":"
		out.RawString(prefix)
		out.String(string(in.PicUrl))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Collection) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Collection) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson803c0c19Encode20212MAMBaInternalPkgCollectionsDeliveryGrpc10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Collection) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Collection) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson803c0c19Decode20212MAMBaInternalPkgCollectionsDeliveryGrpc10(l, v)
}
