// Code generated by MockGen. DO NOT EDIT.
// Source: 2021_2_MAMBa/internal/pkg/domain (interfaces: PersonRepository)

// Package mock is a generated GoMock package.
package mock

import (
	domain "2021_2_MAMBa/internal/pkg/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPersonRepository is a mock of PersonRepository interface.
type MockPersonRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPersonRepositoryMockRecorder
}

// MockPersonRepositoryMockRecorder is the mock recorder for MockPersonRepository.
type MockPersonRepositoryMockRecorder struct {
	mock *MockPersonRepository
}

// NewMockPersonRepository creates a new mock instance.
func NewMockPersonRepository(ctrl *gomock.Controller) *MockPersonRepository {
	mock := &MockPersonRepository{ctrl: ctrl}
	mock.recorder = &MockPersonRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPersonRepository) EXPECT() *MockPersonRepositoryMockRecorder {
	return m.recorder
}

// GetFilms mocks base method.
func (m *MockPersonRepository) GetFilms(arg0 uint64, arg1, arg2 int) (domain.FilmList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFilms", arg0, arg1, arg2)
	ret0, _ := ret[0].(domain.FilmList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFilms indicates an expected call of GetFilms.
func (mr *MockPersonRepositoryMockRecorder) GetFilms(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFilms", reflect.TypeOf((*MockPersonRepository)(nil).GetFilms), arg0, arg1, arg2)
}

// GetFilmsPopular mocks base method.
func (m *MockPersonRepository) GetFilmsPopular(arg0 uint64, arg1, arg2 int) (domain.FilmList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFilmsPopular", arg0, arg1, arg2)
	ret0, _ := ret[0].(domain.FilmList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFilmsPopular indicates an expected call of GetFilmsPopular.
func (mr *MockPersonRepositoryMockRecorder) GetFilmsPopular(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFilmsPopular", reflect.TypeOf((*MockPersonRepository)(nil).GetFilmsPopular), arg0, arg1, arg2)
}

// GetPerson mocks base method.
func (m *MockPersonRepository) GetPerson(arg0 uint64) (domain.Person, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPerson", arg0)
	ret0, _ := ret[0].(domain.Person)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPerson indicates an expected call of GetPerson.
func (mr *MockPersonRepositoryMockRecorder) GetPerson(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPerson", reflect.TypeOf((*MockPersonRepository)(nil).GetPerson), arg0)
}
